var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
isSafari &&
  ($(".shape_contaner").eq(0).css("background-position", "50% 9%"),
  $(".shape_contaner").eq(0).css("background-repeat", "unset"),
  $(".shape_contaner").eq(0).css("background-size", "auto"),
  $(".shape_contaner")
    .eq(0)
    .css(
      "background-image",
      "url(../assets/service/service-landing-text-mask-safari.jpg"
    ));
const ContanerWidth = document.querySelector(".images_shape_move_container"),
  ShapeWidth = document.querySelector(".img1");
gsap.registerPlugin(ScrollTrigger);
let horizontalSection = document.querySelector(".img1"),
  ShapeLength = horizontalSection.scrollWidth,
  endcon = "";
function serviceSection(x) {
  if (x.matches);
  else {
    gsap.utils.toArray(".s-desc");
    const canvas = document.getElementsByClassName("i-image-c")[0],
      context = canvas.getContext("2d");
    gsap.timeline({
      scrollTrigger: {
        trigger: ".s-title-c-image",
        pin: !0,
        startTrigger: ".s-desc-container",
        // markers: true,
        start: "top 21%",
        endTrigger: ".s-desc-container",
        end: "bottom 50%",
        invalidateOnRefresh: !0,
        onUpdate: (self) =>
          (function (progress) {
            if (headArray.length === iconArray.length) {
              var index = Math.round(progress * (headArray.length - 1));
              Math.round(progress);
              (document.querySelector(".t-heading").innerHTML =
                headArray[index]),
                render(index);
            }
            progress > 0 &&
              ($(".services_heading_container").eq(0).css("position", "fixed"),
              1 === progress &&
                $(".services_heading_container")
                  .eq(0)
                  .css("position", "unset "));
          })(self.progress),
      },
    });
    var bottom_sec_top_padd = parseFloat(
        $(".s-holder")
          .eq(0)
          .css("padding-top")
          .replace(/[^\d.-]/g, "")
      ),
      heading_height =
        "'top " +
        ((20 * window.innerHeight) / 100 -
          $(".service-main-heading").eq(0).height() -
          bottom_sec_top_padd) + 
        "px'";
    gsap.timeline({
      scrollTrigger: {
        trigger: ".service-main-heading",
        pin: !0,
        startTrigger: ".s-desc-container",
        start: heading_height,
        endTrigger: ".s-desc-container",
        // markers: !0,
        end: "bottom 60%",
        pinSpacing: !1,
        invalidateOnRefresh: !0,
      },
    });
    function render(index) {
      let renderWidth, renderHeight, x, y;
      1 > canvas.width / canvas.height
        ? ((renderWidth = canvas.width),
          (renderHeight = canvas.width / 1),
          (x = 0),
          (y = (canvas.height - renderHeight) / 2))
        : ((renderWidth = 1 * canvas.height),
          (renderHeight = canvas.height),
          (x = (canvas.width - renderWidth) / 2),
          (y = 0)),
        context.clearRect(0, 0, canvas.width, canvas.height),
        context.drawImage(images[index], x, y, renderWidth, renderHeight);
    }
    var headArray = $(".t-heading").eq(0).data("headings"),
      iconArray = $(".i-image-c").eq(0).data("images");
    const images = [];
    for (let i = 0; i < iconArray.length; i++) {
      const img = new Image();
      (img.src = iconArray[i]), images.push(img);
    }
    render(0);
  }
}
gsap.to(".img1", {
  x: -window.innerWidth / 4,
  scrollTrigger: {
    trigger: ".service-hero-section",
    start: "center center",
    end: `${window.innerHeight}`,
    scrub: 1,
    anticipatePin: 1,
    invalidateOnRefresh: !0,
  },
}),
  gsap.to(".img2", {
    x: window.innerWidth / 4,
    scrollTrigger: {
      trigger: ".service-hero-section",
      start: "center center",
      end: `${window.innerHeight}`,
      scrub: 1,
      anticipatePin: 1,
      invalidateOnRefresh: !0,
    },
  });
var x = window.matchMedia("(max-width: 960px)");
serviceSection(x),
  x.addEventListener("change", function () {
    serviceSection(x);
  });
let slidermobile = window.matchMedia("(max-width: 960px)"),
  sliderdesktop = window.matchMedia("(min-width: 960px)");
function testionialCursor() {
  const customCursor = document.querySelector(".arrow-button-container");
  document.addEventListener("mousemove", (e) => {
    var left = e.clientX - $(".arrow-button-container").eq(0).width() / 2,
      top = e.clientY - $(".arrow-button-container").eq(0).width() / 2;
    (customCursor.style.left = `${left}px`),
      (customCursor.style.top = `${top}px`);
    e.clientX, window.innerWidth;
    $(".prev").eq(0).css("display", "block");
  });
  const sectionSelect = document.querySelector(".slick-slider");
  sectionSelect.addEventListener("mousemove", (e) => {}),
    sectionSelect.addEventListener("mouseenter", () => {
      (customCursor.style.visibility = "visible"),
        (customCursor.style.opacity = "1");
    }),
    sectionSelect.addEventListener("mouseleave", () => {
      (customCursor.style.visibility = "hidden"),
        (customCursor.style.opacity = "0");
    });
}
slidermobile.matches
  ? $(document).on("ready", function () {
      $(".variable").slick({
        dots: !1,
        focusOnSelect: !1,
        infinite: !1,
        variableWidth: !1,
        slidesToShow: 1.1,
        slidesToScroll: 1,
        prevArrow: $(".prev"),
        nextArrow: $(".next"),
        centerPadding: "0px",
        speed: 500,
        easing: "ease-in-out",
      });
    })
  : sliderdesktop.matches &&
    $(document).on("ready", function () {
      $(".variable").slick({
        dots: !1,
        focusOnSelect: !1,
        infinite: !1,
        variableWidth: !1,
        slidesToShow: 2.3,
        slidesToScroll: 1,
        prevArrow: $(".prev"),
        nextArrow: $(".next"),
        speed: 500,
        easing: "ease-in-out",
        gap: 50,
      });
    }),
  "loading" !== document.readyState
    ? testionialCursor()
    : document.addEventListener("DOMContentLoaded", testionialCursor);
