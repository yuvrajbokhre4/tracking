// Navebar and footer Add
$(function () {
    $("#nav-placeholder").load("/nav-bar.html");
    $("#Footer_placeholder").load("/footer.html");
  });
  
  // grid A culture that wins
  
  let tl = gsap.timeline({
    scrollTrigger: {
      trigger: ".culture-that-win-section",
  
      start: "top bottom",
      pin: false,
      scrub: false,
      scrub: true,
      onUpdate: (self) => {
        const rotation = self.progress * 720;
        gsap.set(".star-rotation", { rotation: -rotation });
        gsap.set(".community-wheel-rotation-gsap", { rotation: rotation });
      },
    },
  });
  
  // Accodetion
  
  $(document).ready(function () {
    $(".set > a").on("click", function (event) {
      event.preventDefault(); // Prevent the default behavior of the link
      if ($(this).hasClass("active")) {
        $(this).removeClass("active");
        $(this).siblings(".content").slideUp(300);
        $(".set > a i")
          .removeClass("border_bottom")
          .removeClass("fa-times")
          .addClass("fa-plus");
        $(".set > a img").removeClass("plus-icon-r");
      } else {
        $(".set > a img").removeClass("plus-icon-r");
        $(".set > a i")
          .removeClass("border_bottom")
          .removeClass("fa-times")
          .addClass("fa-plus");
        $(this)
          .find("i")
          .removeClass("fa-plus")
          .removeClass("fa-plus")
          .addClass("fa-times");
        $(this).find("img").addClass("plus-icon-r");
        $(".set > a").removeClass("active");
        $(this).addClass("active");
        $(".content").slideUp(200);
        $(this).siblings(".content").slideDown(400);
      }
    });
  });
  
  //designation key
  var designationKey = [
    {
      "Key": "gdi",
      "Folder": "graphic_intern",
      "Designation": "Graphic Design - Internship"
    },
    {
      "Key": "gi",
      "Folder": "graphic",
      "Designation": "Graphic Design"
    },
    {
      "Key": "mgdi",
      "Folder": "motion_graphic_design_intern",
      "Designation": "Motion Graphic Design - Internship"
    },
    {
      "Key": "mgd",
      "Folder": "motion_graphic_design",
      "Designation": "Motion Graphic Design"
    },
    {
      "Key": "sami",
      "Folder": "sales_and_marketing_intern",
      "Designation": "Sales and Marketing - Internship"
    },
    {
      "Key": "sam",
      "Folder": "sales_and_marketing",
      "Designation": "Sales and Marketing"
    },
    {
      "Key": "smmi",
      "Folder": "social_media_manager_intern",
      "Designation": "Social Media Manager - Internship"
    },
    {
      "Key": "smm",
      "Folder": "social_media_manager",
      "Designation": "Social Media Manager"
    },
    {
      "Key": "sg",
      "Folder": "sr_graphic",
      "Designation": "Sr. Graphic Designer"
    },
    {
      "Key": "smg",
      "Folder": "sr_motion_graphic",
      "Designation": "Sr. Motion Graphic Designer"
    },
    {
      "Key": "uui",
      "Folder": "ux_ui_intern",
      "Designation": "UX UI - Internship"
    },
    {
      "Key": "uu",
      "Folder": "ux_ui",
      "Designation": "UX UI"
    },
    {
      "Key": "wdi",
      "Folder": "web_development_intern",
      "Designation": "Web Development - Internship"
    },
    {
      "Key": "wd",
      "Folder": "web_development",
      "Designation": "Web Development"
    }
  ];
  
  
  
  // APPLY NOW FORM
  
  // var open_form_button = $('#open-form');
  var close_form_button = $("#close-form-button");
  var form_container = $(".popupform-s-c");
  var formName;
  var formKey;
  var formFolder;
  // open_form_button.click(formopenmodule)
  close_form_button.click(formclosemodule);
  
  function formopenmodule(key) {
    form_container.css("display", "flex");
    formKey = designationKey.find(item => item.Key === key);
    formName = formKey.Designation;
    formFolder = formKey.Folder;
    // console.log(formName.Designation);
    $(".p-f-h-designation").html(formName);
    // form_container.css('opacity', '1');
    form_container.css("transform", "scale(1)");
  }
  function formclosemodule() {
    form_container.css("display", "none");
    // form_container.css('opacity', '0');
    form_container.css("transform", "scale(0)");
  }
  
  
  // formclosemodule()
  
  // Function to validate email
  function validateEmail(email) {
    var re = /\S+@\S+\.\S+/;
    return re.test(email);
  }
  
  // Function to validate phone number
  function validatePhone(phone) {
    var re = /^[0-9]{10}$/;
    return re.test(phone);
  }
  
  // Function to validate CV file
  function validateCVFile(cvInput) {
    var allowedExtensions = ["pdf", "doc", "docx", "png", "jpg", "jpeg"]; // Define allowed file extensions
    var filePath = cvInput.val(); // Get the file path
    if (filePath) {
      var extension = filePath.split(".").pop().toLowerCase(); // Get the file extension
      if (allowedExtensions.indexOf(extension) === -1) {
        $('.cv-field-error').eq(0).html("Please upload a CV with a valid file type (PDF, DOC, DOCX, PNG, JPG).", "hello");
        return false;
      }
    } else {
      // console.log("Please upload a CV with a valid file type (PDF, DOC, DOCX, PNG, JPG).");
      $('.cv-field-error').eq(0).html("Please upload your CV.");
      // alert("Please upload your CV.");
      return false;
    }
    return true;
  }
  
  function formSubmission(current_fs) {
    // Validate form fields within the current fieldset
    var name = $("#openingForm").find('input[name="yourfullname"]').val();
    var email = $("#openingForm").find('input[name="email"]').val();
    var phone = $("#openingForm").find('input[name="contact"]').val();
    var cvInput = $("#openingForm").find('input[name="cv"]');
    var url = $("#openingForm").find('input[name="url"]').val();
  
    // Validate name field
    if (current_fs.hasClass("name-field-set")) {
      if (name === "") {
        $(".name-field-error").css("display", "block");
        $(".name-field-error").html("Please enter your name");
        // alert("Please enter your name");
        return false;
      }
    }
  
    // Validate email field
    if (current_fs.hasClass("email-field-set")) {
      if (email === "") {
        $(".email-field-error").css("display", "block");
        $(".email-field-error").html("Please enter email address");
        // alert("Please email address");
        return false;
      }
  
      if (!validateEmail(email)) {
        $(".email-field-error").css("display", "block");
        $(".email-field-error").html("Please enter a valid email address");
        // alert("Please enter a valid email address");
        return false;
      }
    }
    // Validate phone field
    if (current_fs.hasClass("mobile-field-set") && !validatePhone(phone)) {
      $(".tel-field-error").css("display", "block");
      $(".tel-field-error").html("Please enter a valid phone number");
      // alert("Please enter a valid phone number");
      return false;
    }
    // CV Field field
    if (current_fs.hasClass("cv-field-set") && !validateCVFile(cvInput)) {
      $(".cv-field-error").css("display", "block");
      $(".cv-field-error").html("Please uplode CV");
      return false;
    }
  
    //portfoliolink check
    if (current_fs.hasClass("portfoliolink-field-set")) {
      if (url === "") {
        $(".url-field-error").css("display", "block");
        $(".url-field-error").html("Please enter a valid portfolio url");
        // alert("Please enter a valid portfolio url");
        return false;
      }
    }
    return true;
  }
  
  $(document).ready(function () {
    var current_fs, next_fs, previous_fs; //fieldsets
    var opacity;
    var current = 1;
    var steps = $(".form-field-set").length;
    var form_progress_counter = $(".form-progress-counter");
    form_progress_counter.html(current + "/" + steps);
    if (current == 1) {
      $(".previous").prop("disabled", true);
      $(".previous").addClass("button-inactive");
    }
  
    setProgressBar(current);
  
    $(".next").click(function () {
      current_fs = $(this).parent().parent();
      next_fs = $(this).parent().parent().next();
      if (!formSubmission(current_fs)) {
        // Stop the form progression if validation fails
        return false;
      }
  
      $(".previous").prop("disabled", false);
      $(".previous").removeClass("button-inactive");
  
      //Add Class Active
      $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");
      form_progress_counter.html(current + 1 + "/" + steps);
  
      //show the next fieldset
      next_fs.css({
        display: "flex",
      });
      //hide the current fieldset with style
      current_fs.animate(
        { opacity: 0 },
        {
          step: function (now) {
            // for making fielset appear animation
            opacity = 1 - now;
  
            current_fs.css({
              display: "none",
              position: "relative",
            });
            next_fs.css({ opacity: opacity });
          },
          duration: 500,
        }
      );
      setProgressBar(++current);
    });
  
    $(".previous").click(function () {
      current_fs = $(this).parent().parent();
      previous_fs = $(this).parent().parent().prev();
      next_fs = $(this).parent().parent().next();
  
      if (current == 2) {
        $(".previous").prop("disabled", true);
        $(".previous").addClass("button-inactive");
      }
  
      //Remove class active
      $("#progressbar li")
        .eq($("fieldset").index(current_fs))
        .removeClass("active");
      form_progress_counter.html(current + 1 + "/" + steps);
  
      //show the previous fieldset
      previous_fs.css({
        display: "flex",
      });
  
      //hide the current fieldset with style
      current_fs.animate(
        { opacity: 0 },
        {
          step: function (now) {
            // for making fielset appear animation
            opacity = 1 - now;
  
            current_fs.css({
              display: "none",
              position: "relative",
            });
            previous_fs.css({ opacity: opacity });
          },
          duration: 500,
        }
      );
      setProgressBar(--current);
    });
  
    function setProgressBar(curStep) {
      var percent = parseFloat(100 / steps) * curStep;
      percent = percent.toFixed();
      $(".progress-bar").css("width", percent + "%");
    }
  
    $(".submit").click(function () {
      return false;
    });
    var myform = document.getElementById("openingForm");
    myform.addEventListener("submit", function (e) {
      e.preventDefault();
      var name = $("#openingForm").find('input[name="yourfullname"]').val();
      var email = $("#openingForm").find('input[name="email"]').val();
      var phone = $("#openingForm").find('input[name="contact"]').val();
      var cvInput = $("#openingForm").find('input[name="cv"]');
      var url = $("#openingForm").find('input[name="url"]').val();
      var cvUrl = fileuplode()
      console.log(cvUrl);
      bodytxt =
        "Name: " +
        `<b>${name} </b>` +
        "<br>" +
        "\n Email: " +
        `<b>${email} </b>` +
        "<br>" +
        "\n Contact: " +
        `<b>${phone} </b>` +
        "<br>" +
        "\n CV: " +
        `<b>${cvUrl} </b>` +
        "<br>" +
        "\n Portfolio: " +
        `<b>${url} </b>` +
        "<br>";
      Email.send({
        Host: "smtp.elasticemail.com",
        Username: "iminfo@integramagna.com",
        Password: "F63AAC721194CFB801A7F3163DBC96920A2B",
        To: "hi@integramagna.com",
        From: "hi@integramagna.com",
        Subject: "Website form submission: " + formName,
        Port: 2525,
        Body: bodytxt,
      });
    });
  });
  
  // -----------------
  
  // Function to get the current timestamp in a readable format
  function getCurrentTimestamp() {
    const now = new Date();
    return `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')}_${String(now.getHours()).padStart(2, '0')}-${String(now.getMinutes()).padStart(2, '0')}-${String(now.getSeconds()).padStart(2, '0')}`;
  }
  
  // Function to upload the file to S3
  function fileuplode() {
    // Configure the AWS SDK
    AWS.config.region = 'ap-south-1'; // Ensure this matches your region
    AWS.config.credentials = new AWS.CognitoIdentityCredentials({
      IdentityPoolId: 'ap-south-1:1576cd6a-2ffc-46db-a911-c98c9659bb56' // Replace with your Identity Pool ID
    });
  
    // Create an S3 client
    const s3 = new AWS.S3();
    const fileInput = document.getElementById('file-input');
    const file = fileInput.files[0];
    if (!file) {
      alert('Please select a file to upload.');
      return;
    }
  
    // Get the candidate's name from the form
    const name = $("#openingForm").find('input[name="yourfullname"]').val().replace(/\s+/g, '_');
    const design = formName.replace(/\s+/g, '_');
    // Generate the current timestamp
    const timestamp = getCurrentTimestamp();
    // Create the new file name
    const newFileName = `${name}_${design}_${timestamp}_${file.name.replace(/\s+/g, '_')}`;
    const cvUrl = `https://formsubmission.s3.ap-south-1.amazonaws.com/${formFolder}/${newFileName}`;
  
    const key = `${formFolder}/${newFileName}`;
    const params = {
      Bucket: 'formsubmission', // Ensure this bucket exists and you have write permissions
      Key: key,
      Body: file
    };
  
    s3.putObject(params, (err, data) => {
      if (err) {
        console.error('Error uploading file:', err);
        // alert('An error occurred while uploading the file.');
      } else {
        console.log('File uploaded successfully:', data);
        // alert('File uploaded successfully!');
      }
    });
    return (cvUrl);
  }